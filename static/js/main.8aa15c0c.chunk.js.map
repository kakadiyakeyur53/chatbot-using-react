{"version":3,"sources":["widgets/EnrollmentNo.jsx","widgets/SoftwareDevelopment.jsx","widgets/WebDevelopment.jsx","Config.jsx","MessageParser.jsx","ActionProvider.jsx","App.jsx","index.js"],"names":["EnrollmentNo","props","useState","name","year","collagecode","shift","branch","rollno","state","setstate","onchangeevent","event","console","log","target","value","prev","type","onChange","className","onClick","preventDefault","actionProvider","EnrollmentFormValidation","info","EnrollSubmit","SoftwareDevelopment","SoftwareDevelopmentState","map","val","index","WebDevelopment","WebDevelopmentState","botName","config","customStyles","botMessageBox","backgroundColor","chatButton","initialMessages","createChatBotMessage","widgets","widgetName","widgetFunc","mapStateToProps","MessageParser","parse","message","lowerCase","toLowerCase","includes","EnrollmentNumber","WebHandler","SoftwareHandler","handleDefault","this","ActionProvider","setStateFunc","createClientMessage","addMessageToBotState","messages","Array","isArray","setState","withAvatar","widget","App","style","color","Config","messageParser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aa15c0c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//defination  of EnrollmentNo widget \r\n//all the mathod define in actionprovider and all states of widget are passed in props\r\n//you can use all fuunction and state with the help of props\r\nconst EnrollmentNo = (props) => {\r\n  const [state, setstate] = useState({\r\n    name: \"\",\r\n    year: \"\",\r\n    collagecode: \"\",\r\n    shift: \"\",\r\n    branch: \"\",\r\n    rollno: \"\",\r\n  });\r\n\r\n  const onsubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(state.name)\r\n    \r\n    if(state.name===\"\"){\r\n      props.actionProvider.EnrollmentFormValidation(\"name\");\r\n    }else{\r\n      if(state.year===\"\"){\r\n        props.actionProvider.EnrollmentFormValidation(\"year\");\r\n      }else{\r\n        if(state.collagecode===\"\"){\r\n          props.actionProvider.EnrollmentFormValidation(\"collage code\");\r\n        }else{\r\n          if(state.shift===\"\"){\r\n            state.shift=\"01\";\r\n          }\r\n            if(state.branch===\"\"){\r\n              props.actionProvider.EnrollmentFormValidation(\"branch\");\r\n            }else{\r\n              if(state.rollno===\"\"){\r\n                props.actionProvider.EnrollmentFormValidation(\"rollno\");\r\n              }else{\r\n    const info = state;\r\n    //calling mathod define in actionprovider\r\n    props.actionProvider.EnrollSubmit(info);\r\n    }\r\n  }}}}\r\n  };\r\n\r\n  const onchangeevent = (event) => {\r\n    console.log(event.target.value);\r\n    setstate((prev) => {\r\n      return { ...prev, [event.target.name]: event.target.value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <label>Student Name: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <label>Admission Year: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"year\"\r\n          value={state.year}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <label>Collage Code: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"collagecode\"\r\n          value={state.collagecode}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <label>Shift: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"shift\"\r\n          value={state.shift}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <label>Branch Code: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"branch\"\r\n          value={state.branch}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <label>Roll No: </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"rollno\"\r\n          value={state.rollno}\r\n          onChange={onchangeevent}\r\n        />\r\n        <br />\r\n        <button className=\"btn btn-primary my-3\" onClick={onsubmit}>\r\n          submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnrollmentNo;\r\n","import React from \"react\";\r\n\r\n\r\n//defination  of SoftwareDevelopment widget \r\n//all the mathod define in actionprovider and all states of widget are passed in props\r\n//you can use all fuunction and state with the help of props\r\nconst SoftwareDevelopment = (props) => {\r\n  return (\r\n    <>\r\n      <ol>\r\n        {props.SoftwareDevelopmentState.map((val, index) => {\r\n          return <li>{val}</li>;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SoftwareDevelopment;\r\n","import React from \"react\";\r\n\r\n\r\n//defination  of WebDevelopment widget \r\n//all the mathod define in actionprovider and all states of widget are passed in props\r\n//you can use all fuunction and state with the help of props\r\nconst WebDevelopment = (props) => {\r\n  return (\r\n    <>\r\n      <ol>\r\n        {props.WebDevelopmentState.map((val, index) => {\r\n          return <li>{val}</li>;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\nexport default WebDevelopment;\r\n","import { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport EnrollmentNo from \"./widgets/EnrollmentNo\";\r\nimport SoftwareDevelopment from \"./widgets/SoftwareDevelopment\";\r\nimport WebDevelopment from \"./widgets/WebDevelopment\";\r\n\r\nconst botName = \"keyur kakadiya\";\r\n//congig for chatbot\r\nconst config = {\r\n  botName: botName,\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n    chatButton: {\r\n      backgroundColor: \"#5ccc9d\",\r\n    },\r\n  },\r\n  initialMessages: [\r\n    createChatBotMessage(`hii, i am ${botName}.`),\r\n  ],\r\n  state: {\r\n    WebDevelopmentState: [\"HTML\",\"CSS\",\"JAVASCRIPT\",\"BOOTSTRAP\",\"JQUERY & AJAX\",\"SASS\",\"REACT\",\"REDUX\",\"NODEJS\",\"EXPRESS\",\"MONGODB & MONGOOSE\"],\r\n    SoftwareDevelopmentState: [\"JAVA\",\"PYTHON\",\"DATA-STRUCTURE & ALGORITHAM\",\"SECURITY\",\"PENETRATION TESTING\",\"ANDROID/IOS SDK\",\"DATA ANALYSIS\",\"API & JSON\"],\r\n  },\r\n  //widgets declaration section which we use in our bot for display information\r\n  widgets: [\r\n    {\r\n      widgetName: \"EnrollmentNo\",\r\n      widgetFunc: (props) => <EnrollmentNo {...props} />,\r\n      mapStateToProps: [\"Enrollment\"],\r\n    },\r\n    {\r\n      widgetName: \"WebDevelopment\",\r\n      widgetFunc: (props) => <WebDevelopment {...props} />,\r\n      mapStateToProps: [\"WebDevelopmentState\"],\r\n    },\r\n    {\r\n      widgetName: \"SoftwareDevelopment\",\r\n      widgetFunc: (props) => <SoftwareDevelopment {...props} />,\r\n      mapStateToProps: [\"SoftwareDevelopmentState\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;\r\n","class MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n  parse = (message) => {\r\n    //convert message in lowercase wich passed by user\r\n    const lowerCase = message.toLowerCase();\r\n\r\n    //define your keyword in condition and return handler function whixh created in actionprovider\r\n    if (\r\n      lowerCase.includes(\"enroll\") ||\r\n      lowerCase.includes(\"rollment\") ||\r\n      lowerCase.includes(\"enrollmentno\") ||\r\n      lowerCase.includes(\"roll no\") ||\r\n      lowerCase.includes(\"roll\") ||\r\n      lowerCase.includes(\"roll number\") ||\r\n      lowerCase.includes(\"enrollment no\") ||\r\n      lowerCase.includes(\"enrollment number\")\r\n    ) {\r\n      return this.actionProvider.EnrollmentNumber();\r\n    }\r\n\r\n    if (\r\n      lowerCase.includes(\"web\") ||\r\n      lowerCase.includes(\"webdevelop\") ||\r\n      lowerCase.includes(\"website\") ||\r\n      lowerCase.includes(\"website development\") ||\r\n      lowerCase.includes(\"web app\") ||\r\n      lowerCase.includes(\"web application\") ||\r\n      lowerCase.includes(\"webdevelopment\") ||\r\n      lowerCase.includes(\"web development\")\r\n    ) {\r\n      return this.actionProvider.WebHandler();\r\n    }\r\n\r\n    if (\r\n      lowerCase.includes(\"android\") ||\r\n      lowerCase.includes(\"ios\") ||\r\n      lowerCase.includes(\"flutter\") ||\r\n      lowerCase.includes(\"software\") ||\r\n      lowerCase.includes(\"softwaredevelop\") ||\r\n      lowerCase.includes(\"software develop\") ||\r\n      lowerCase.includes(\"softwaresite development\") ||\r\n      lowerCase.includes(\"software app\") ||\r\n      lowerCase.includes(\"software application\") ||\r\n      lowerCase.includes(\"softwaredevelopment\") ||\r\n      lowerCase.includes(\"software development\")\r\n    ) {\r\n      return this.actionProvider.SoftwareHandler();\r\n    }\r\n\r\n    return this.actionProvider.handleDefault();\r\n  };\r\n}\r\n\r\nexport default MessageParser;\r\n","class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n    this.createClientMessage = createClientMessage;\r\n  }\r\n\r\n  //method for add message in our chatbot\r\n  addMessageToBotState = (messages) => {\r\n    if (Array.isArray(messages)) {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        messages: [...state.messages, ...messages],\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        messages: [...state.messages, messages],\r\n      }));\r\n    }\r\n  };\r\n\r\n  //handler coding for specific widget which is called by messageparser\r\n  EnrollmentNumber = () => {\r\n    const message = this.createChatBotMessage(\r\n      `enter your information for generate enrollment no.`,\r\n      {\r\n        withAvatar: true,\r\n        widget: \"EnrollmentNo\",\r\n      }\r\n    );\r\n    this.addMessageToBotState(message);\r\n  };\r\n\r\n  EnrollSubmit = (props) => {\r\n    const message = this.createChatBotMessage(\r\n      `enrollment no of ${props.name}: ${props.year % 100}${props.collagecode}${\r\n        props.shift\r\n      }${props.branch}${props.rollno}`,\r\n      {\r\n        withAvatar: true,\r\n      }\r\n    );\r\n    this.addMessageToBotState(message);\r\n  };\r\n\r\n  EnrollmentFormValidation = (props) =>{\r\n    const message = this.createChatBotMessage(\r\n      `enter ${props} for create enrollment number`,\r\n      {\r\n        withAvatar: true,\r\n      }\r\n    );\r\n    this.addMessageToBotState(message);\r\n  }\r\n\r\n  WebHandler = () => {\r\n    const messages = this.createChatBotMessage(\r\n      `cources for web development:`,\r\n      { withAvatar: true, widget: \"WebDevelopment\" }\r\n    );\r\n\r\n    this.addMessageToBotState(messages);\r\n  };\r\n\r\n  SoftwareHandler = () => {\r\n    const messages = this.createChatBotMessage(\r\n      `cources for software development:`,\r\n      { withAvatar: true, widget: \"SoftwareDevelopment\" }\r\n    );\r\n    this.addMessageToBotState(messages);\r\n  };\r\n\r\n  //default handler if you not found any mathes\r\n  handleDefault = () => {\r\n    const message = this.createChatBotMessage(\"How can I help?\", {\r\n      withAvatar: true,\r\n    });\r\n    this.addMessageToBotState(message);\r\n  };\r\n}\r\n\r\nexport default ActionProvider;\r\n","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Config from \"./Config\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport \"./app.css\"\n\nfunction App() {\n  return (\n    <>\n    <div className=\"app\">\n    <div className=\"container\">\n      <h1>Simple chatbot made by <span style={{color:\"red\"}}>keyur kakadiya</span></h1>\n      </div>\n      <div className=\"container\">\n      <h4>1. for find your enrollment no. in gtu enter enrollment no.</h4>\n      <h5>fill form and submit your responce </h5>\n    </div>\n    <div className=\"container\">\n      <h4>2. want to know  about web development type web development</h4>\n    </div>\n    <div className=\"container\">\n      <h4>3. want to know about software development type software development</h4>\n    </div>\n    <div className=\"App mx-auto col-md-6 col-sm-8 col-lg-4 cpl-xl-3 my-5\">\n      <Chatbot\n        config={Config}\n        messageParser={MessageParser}\n        actionProvider={ActionProvider}\n      />\n    </div>\n    </div>\n    </> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App/>\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}